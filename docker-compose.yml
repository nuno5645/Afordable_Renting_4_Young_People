services:
  api:
    build: ./django_api
    ports:
      - "8080:8000"
    volumes:
      - ./django_api:/app
      - ./data:/app/api/data:rw
    user: "1000:1000"
    command: python api/manage.py runserver_plus --cert-file api/certs/cert.crt --key-file api/certs/cert.key 0.0.0.0:8000
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - DJANGO_SETTINGS_MODULE=api.settings
    networks:
      - house_network
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost:8000/api/houses/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # scraper:
  #   build: .
  #   volumes:
  #     - .:/app
  #     - ./data:/app/data:rw
  #   user: "1000:1000"
  #   command: /usr/local/bin/run_scraper.sh
  #   environment:
  #     - PYTHONPATH=/app
  #     - PYTHONUNBUFFERED=1
  #   networks:
  #     - house_network
  #   depends_on:
  #     api:
  #       condition: service_healthy

  # ngrok:
  #   image: wernight/ngrok
  #   ports:
  #     - "4040:4040"
  #   command:
  #     - /bin/sh
  #     - -c
  #     - |
  #       ngrok start --all
  #   volumes:
  #     - .:/home/ngrok/.ngrok2/
  #   environment:
  #     - NGROK_AUTH_TOKEN=2hzAzrQSxoF66VanuaNc8TCv3AE_5nM4S6xDYeawNUC3HEr7a
  #   networks:
  #     - house_network
  #   depends_on:
  #     api:
  #       condition: service_healthy

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - house_network
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5173/"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  house_network:
    driver: bridge

volumes:
  data:
    driver: local 